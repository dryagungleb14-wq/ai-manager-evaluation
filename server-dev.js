import express from "express";
import { createServer } from "http";

const app = express();
app.use(express.json());

// –ü—Ä–æ—Å—Ç—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
app.get("/api/stats", (req, res) => {
  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const stats = {
    totalAnalyses: 15,
    callAnalyses: 12,
    correspondenceAnalyses: 3,
    languageStats: {
      ru: 14,
      en: 1
    },
    managerStats: {
      "1": 5,
      "2": 4,
      "3": 3,
      "4": 2,
      "5": 1
    },
    overallAvgScore: 0.78,
    recentAnalyses: 8,
    lastUpdated: new Date().toISOString()
  };
  
  res.json(stats);
});

app.get("/api/health", (req, res) => {
  res.json({ 
    status: "ok", 
    message: "AI Manager Evaluation API —Ä–∞–±–æ—Ç–∞–µ—Ç!",
    timestamp: new Date().toISOString()
  });
});

// –ü—Ä–æ—Å—Ç–æ–π HTML –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
app.get("/", (req, res) => {
  res.send(`
    <!DOCTYPE html>
    <html>
    <head>
      <title>AI Manager Evaluation - –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞</title>
      <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .container { max-width: 800px; margin: 0 auto; }
        .feature { background: #f5f5f5; padding: 20px; margin: 20px 0; border-radius: 8px; }
        .api-test { background: #e8f4fd; padding: 15px; margin: 10px 0; border-radius: 5px; }
        button { background: #007bff; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer; }
        button:hover { background: #0056b3; }
        pre { background: #f8f9fa; padding: 15px; border-radius: 5px; overflow-x: auto; }
      </style>
    </head>
    <body>
      <div class="container">
        <h1>üöÄ AI Manager Evaluation - –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞</h1>
        
        <div class="feature">
          <h2>‚ú® –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–æ–≤</h2>
          <p>–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π API endpoint <code>/api/stats</code> –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –≤—Å–µ–º –∞–Ω–∞–ª–∏–∑–∞–º.</p>
          
          <div class="api-test">
            <h3>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API</h3>
            <button onclick="testStats()">–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É</button>
            <button onclick="testHealth()">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ API</button>
            <div id="result"></div>
          </div>
        </div>
        
        <div class="feature">
          <h2>üìä –ß—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</h2>
          <ul>
            <li>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–∏–∑–æ–≤</li>
            <li>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤–æ–Ω–∫–æ–≤ vs –ø–µ—Ä–µ–ø–∏—Å–∫–∏</li>
            <li>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —è–∑—ã–∫–∞–º</li>
            <li>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º</li>
            <li>–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –ø–æ —á–µ–∫-–ª–∏—Å—Ç–∞–º</li>
            <li>–ê–Ω–∞–ª–∏–∑—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π</li>
          </ul>
        </div>
      </div>
      
      <script>
        async function testStats() {
          try {
            const response = await fetch('/api/stats');
            const data = await response.json();
            document.getElementById('result').innerHTML = '<h4>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</h4><pre>' + JSON.stringify(data, null, 2) + '</pre>';
          } catch (error) {
            document.getElementById('result').innerHTML = '<p style="color: red;">–û—à–∏–±–∫–∞: ' + error.message + '</p>';
          }
        }
        
        async function testHealth() {
          try {
            const response = await fetch('/api/health');
            const data = await response.json();
            document.getElementById('result').innerHTML = '<h4>–°—Ç–∞—Ç—É—Å API:</h4><pre>' + JSON.stringify(data, null, 2) + '</pre>';
          } catch (error) {
            document.getElementById('result').innerHTML = '<p style="color: red;">–û—à–∏–±–∫–∞: ' + error.message + '</p>';
          }
        }
      </script>
    </body>
    </html>
  `);
});

const port = parseInt(process.env.PORT || '3000', 10);
const server = createServer(app);

server.listen(port, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
  console.log(`üìä –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:${port} –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è`);
  console.log(`üîó API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: http://localhost:${port}/api/stats`);
});
